// Program that implements the bisection algorithm iteratively
bisection(var f, var a, var b, var TOL, var NMAX) { new var n = 1; while (var n <= var NMAX) { var c = (var a + var b)/2; if ((fun var f (var c) == 0) || ( (var b - var a)/2 <= var TOL ) ) { return var c }; var n = var n + 1; if (fun var sign(var c) == fun var sign(var c)) { var a = var c; } else { var b = var c; } } } quadratic(var c) { return (var c * var c) + var c + 1; } main() { let var TOL = 10; let var NMAX = 100; new var a = 1; new var b = 1; new var root = fun var bisection(var quadratic, var a, var b, var TOL, var NMAX); return var root; }
